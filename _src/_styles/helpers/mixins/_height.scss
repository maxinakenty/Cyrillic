// @mixin height($number) {
//   @for $i from 1 through $breakpoints-length {
//     $point: nth($breakpoints-keys, $i);

//     @include up($point) {
//       @if $i > $line-heights-length {
//         $line-height: nth($line-heights-values, $line-heights-length);
//         $font-base: map-deep-get($modular-scale, nth($scale-keys, $line-heights-length), zeta);
//         $leading: round($font-base * $line-height);
//         $root-size: nth($sizes, $i);
//         $module: $number * $leading;

//        height: rem($module, $root-size);
//       }@else {
//         $line-height: nth($line-heights-values, $i);
//         $root-size: nth($sizes, $i);
//         $scale-key: nth($breakpoints-keys, $i);
//         $font-base: map-deep-get($modular-scale, $scale-key, zeta);
//         $leading: round($font-base * $line-height);
//         $module: $number * $leading;

//         height: rem($module, $root-size);
//       }
//     }
//   }
// }

// @mixin min-height($number) {
//   @for $i from 1 through $breakpoints-length {
//     $point: nth($breakpoints-keys, $i);

//     @include up($point) {
//       @if $i > $line-heights-length {
//         $line-height: nth($line-heights-values, $line-heights-length);
//         $font-base: map-deep-get($modular-scale, nth($scale-keys, $line-heights-length), zeta);
//         $leading: round($font-base * $line-height);
//         $root-size: nth($sizes, $i);
//         $module: $number * $leading;

//        min-height: rem($module, $root-size);
//       }@else {
//         $line-height: nth($line-heights-values, $i);
//         $root-size: nth($sizes, $i);
//         $scale-key: nth($breakpoints-keys, $i);
//         $font-base: map-deep-get($modular-scale, $scale-key, zeta);
//         $leading: round($font-base * $line-height);
//         $module: $number * $leading;

//         min-height: rem($module, $root-size);
//       }
//     }
//   }
// }

// @mixin min-height($number) {
//   @for $i from 1 through $breakpoints-length {
//     $point: nth($breakpoints-keys, $i);

//     @include up($point) {
//       @if $i > $line-heights-length {
//         $line-height: nth($line-heights-values, $line-heights-length);
//         $font-base: map-deep-get($modular-scale, nth($scale-keys, $line-heights-length), zeta);
//         $leading: round($font-base * $line-height);
//         $root-size: nth($sizes, $i);
//         $module: $number * $leading;

//        min-height: rem($module, $root-size);
//       }@else {
//         $line-height: nth($line-heights-values, $i);
//         $root-size: nth($sizes, $i);
//         $scale-key: nth($breakpoints-keys, $i);
//         $font-base: map-deep-get($modular-scale, $scale-key, zeta);
//         $leading: round($font-base * $line-height);
//         $module: $number * $leading;

//         min-height: rem($module, $root-size);
//       }
//     }
//   }
// }

// @mixin max-height($number) {
//   @for $i from 1 through $breakpoints-length {
//     $point: nth($breakpoints-keys, $i);

//     @include up($point) {
//       @if $i > $line-heights-length {
//         $line-height: nth($line-heights-values, $line-heights-length);
//         $font-base: map-deep-get($modular-scale, nth($scale-keys, $line-heights-length), zeta);
//         $leading: round($font-base * $line-height);
//         $root-size: nth($sizes, $i);
//         $module: $number * $leading;

//        max-height: rem($module, $root-size);
//       }@else {
//         $line-height: nth($line-heights-values, $i);
//         $root-size: nth($sizes, $i);
//         $scale-key: nth($breakpoints-keys, $i);
//         $font-base: map-deep-get($modular-scale, $scale-key, zeta);
//         $leading: round($font-base * $line-height);
//         $module: $number * $leading;

//         max-height: rem($module, $root-size);
//       }
//     }
//   }
// }